@model IEnumerable<BTAnshDesai.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@using BTAnshDesai.Services.Interfaces
@using BTAnshDesai.Models.enums
@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService
@{
    ViewData["Title"] = "All Tickets";
    BTUser user = await UserManager.GetUserAsync(User);
}

<h1>All Tickets</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>            
            <th>
                @Html.DisplayNameFor(model => model.Project.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Archived)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArchivedByProject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeveloperUser.Id)
            </td>
            <td>
                
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @if(User.IsInRole(Roles.Admin.ToString()) || item.DeveloperUserId == user.Id || item.OwnerUserId == user.Id || await ProjectService.IsAssignedProjectManager(user.Id, item.ProjectId))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    @if(User.IsInRole(Roles.Admin.ToString()) || await ProjectService.IsAssignedProjectManager(user.Id, item.ProjectId))
                    {
                        @if (item.Archived == true)
                        {
                            <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                        }
                        else
                        {
                            <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                        }
                    }
                                
            </td>
        </tr>
}
    </tbody>
</table>
